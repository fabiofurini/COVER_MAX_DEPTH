#ifndef glo_KP_function_HEADER
#define glo_KP_function_HEADER


#include <stdlib.h>
#include <stdio.h>
#include <assert.h>
#include <time.h>
#include <iostream>
#include <fstream>
#include <math.h>
#include <vector>
#include <set>
#include <string>
#include <sstream>
#include <errno.h>
#include <cstring>
#include <cstdlib>


#include "global_variables_KP.h"
#include "DP.h"




/*****************************************************************/
int randomBETWEEN(int min,int max);
/*****************************************************************/

/*****************************************************************/
double randomBETWEEN_double(int min,int max);
/*****************************************************************/

/*****************************************************************/
double random01();
/*****************************************************************/

/***********************************************************************************/
int generate_instance_KP(data *KP_instance,int number_of_items,int perc_cap,int category,int R,int shuffle,double conflict_density);
/***********************************************************************************/

/***********************************************************************************/
void read_instance_file_KP(data *KP_instance);
/***********************************************************************************/

/***********************************************************************************/
void free_data_prob(data *KP_instance);
/***********************************************************************************/

/***********************************************************************************/
void kp_load_cplex(data *KP_instance);
/***********************************************************************************/

/***********************************************************************************/
void kp_free_cplex(data *KP_instance);
/***********************************************************************************/

/***********************************************************************************/
double kp_solve_cplex(data *KP_instance);
/***********************************************************************************/

/***********************************************************************************/
double kp_solve_cplex_LP(data *KP_instance,double *point);
/***********************************************************************************/

/***********************************************************************************/
void add_cover(data *KP_instance,double *cover);
/***********************************************************************************/

/***********************************************************************************/
void add_cover_extended(data *KP_instance,double *cover, double RHS);
/***********************************************************************************/

#endif
